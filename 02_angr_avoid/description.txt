-- Hey Jeff, thanks for the help with those binaries. I was pretty skeptical
   but you've convinced me. Symbolic execution saved me a ton of time.

Jeff smiled back at you and nodded, accepting your thanks without saying any-
thing.

*Buzz* *Buzz*

You feel your phone vibrate twice in your pocket. An email just arrived in your
inbox. It's lunch now. You decide to look at it after you've eaten your burrito.

...

- Hello,
- 
- Thanks for the great work with those last few binaries.
-
- Unfortunately, it seems Eve Elle Software has decided not to put them in their
- upcoming release. Instead, they have a new backdoor system. My source tells me
- the binary tries to trick you by triggering a trap if you execute a certain
- part of the program. I have no idea what that means, but you'll need to figure 
- out a way to avoid it.
-
- Could you have these done by the end of the day today?
-
- Thank you for your hard work,
- Kelly
- Security Team Manager
- Skynet Software

After reading this, you walk over to Jeff's cubicle.

-- Do you know how to make Angr avoid a certain part of the binary?

-- Why? Is there are part of the code that's taking too long to run that you know
   doesn't lead to the backdoor?

-- I don't know. Kelly says the binary has some sort of trap, and I need to avoid
   it, whatever that means.

-- Weird... Usually you only avoid areas of the code you know don't lead anywhere
   useful. Angr has some functionality that allows you to stop running any branch
   that happens to reach some address or condition that leads you to believe there
   isn't a solution past that point. Remember the explore method I told you about
   earlier? I told you to use the 'find' parameter to tell Angr to stop when you
   reach a certain address. There's another similar parameter, called 'avoid',
   that tells Angr to throw away any branches that reach that point. Go ahead and
   see if that's what you need.

-- Thanks, I'll let you know.
